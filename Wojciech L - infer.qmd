---
title: "K-means clustering and statistical inference - diamonds dataset"
author: "Wojciech L"
format: html
editor: visual
---

## Introduction

This paper will describe the clustering problem using the example of dividing a diamond dataset into four logical parts.

Simply assigning a cluster to a row doesn't really add anything. However, if a relationship between the cluster and other columns is discovered, the cluster to which the row belongs provides some information. To obtain information about the relationship between the cluster and existing columns, statistical methods—primarily hypothesis testing—can be used.

Therefore, a clustering of the diamond set will be carried out and then the relationships between:

- diamond depth and price (unrelated to the cluster, but intended to demonstrate the infer package methodology)

- cluster and diamond price (based on F-statistics)

- cluster and diamond color (based on chi-square statistic)

Finally, conclusions will be presented.

## Loading libraries

The first step is to load the appropriate libraries

```{r}
#| message: false
#| warning: false
library(tidyclust)
library(dplyr)
library(tidymodels)
library(ggplot2)
library(DT)
library(infer)
```

## Loading a data

The diamond dataset is being loaded

```{r}
data("diamonds")
```

```{r}
datatable(head(diamonds, caption = "First few rows of diamonds dataset"))
```


## Filtering a data

Due to the relationship between the mass of a diamond and its size, the columns of sizes are removed and the column of diamond mass is left.

```{r}
diamonds_num <- diamonds %>% select(-x, -y, -z)
```

## Model of clustering

We divide the set of diamonds into four subsets - clusters.

At first - model to do clustering is instancied

```{r}
model <- k_means(num_clusters = 4) %>%
  set_engine("stats", iter.max = 100, nstart = 25)
```

## Model - fit

The model is trained on all available data

```{r}
fitted_model <- fit(model, ~ ., data = diamonds_num)
```

## Prediction using fitted model

Appending a cluster column to existing columns

```{r}
augmented_data <- augment(fitted_model, new_data = diamonds_num)
```

Head of new dataset

```{r}
datatable(head(augmented_data, caption = "First few rows of augmented_data"))
```


## Number of rows in clusters

```{r}
ggplot(augmented_data, aes(x= .pred_cluster))+
  geom_bar(fill = "red")+
  labs(
    title = "Number of rows in clusters",
    subtitle = "Number of clusters - four",
    caption = "Source - augmented_data",
    x = "Name of cluster"
  )
```


## Hypotesis testing

This section will test three hypotheses: the first concerns numerical variables and aims to demonstrate the infer package's operation using an intuitive correlation example. The other two will be based on more advanced statistics: F and chi-square.

### Correlation of depth and price (demonstration of the infer methodology)

To understand the infer methodology, an example will be presented to determine the relationship between depth and price of a diamond.

Initially, the Pearson statistic is calculated for the actual data distribution

```{r}
obs_corr <- augmented_data %>%
  specify(depth ~ price) %>%      
  calculate(stat = "correlation") 
```

Then the statistic is calculated 2000 times (the value generally accepted in the literature) - for the distribution with swapped values of depth and diamond price.
We put forward the null hypothesis - no relationship between depth and diamond price.

The null hypothesis (H0) is formed - there is no relationship between depth and diamond price. Hypothesis H1 says the opposite.

```{r}
null_corr <- augmented_data %>%
  specify(depth ~ price) %>%      
  hypothesize(null = "independence") %>%  # H0: brak związku
  generate(reps = 2000, type = "permute") %>%
  calculate(stat = "correlation")   
```

The null hypothesis assumed no relationship between depth and diamond price. We calculated the probability that the calculated Pearson statistic value would be obtained in the absence of a relationship.

```{r}
p_val_corr <- get_p_value(null_corr, obs_corr, direction = "greater")
p_val_corr 

```

The value of the statistic is marked on the null distribution graph - if it is outside the range, we reject the null hypothesis.

```{r}
visualize(null_corr) +
  shade_p_value(obs_corr, direction = "greater") +
  labs(
    title = paste("Null distr., Pearson correlation statistic =", ... =    round(obs_corr$stat[1],2))
  )
```
Based on the above results, we accept the null hypothesis - there is a NO relationship between the depth of the diamond and its price


### Relationship between assigned cluster and price

The purpose of this section is to determine whether a relationship exists between the assigned cluster and the price of a diamond. As in the previous example, the null distribution statistic and the value are calculated. Because we are determining a relationship between a categorical (cluster) and a numerical data item, the F statistic will be used.

```{r}
obs_f <- augmented_data %>%
  specify(price ~ .pred_cluster) %>%    
  calculate(stat = "F")   
```

As before, the hypothesis of no relationship is put forward. Hypothesis H1 says the opposite - there is a relationship price - cluster.

```{r}
null_f <- augmented_data %>%
  specify(price ~ .pred_cluster) %>%  
  hypothesize(null = "independence") %>%
  generate(reps = 2000, type = "permute") %>%
  calculate(stat = "F")  
```

The meaning of p is analogous to the previous one, but it concerns the relationship between cluster and price

```{r}
p_val_f <- get_p_value(null_f, obs_f, direction = "greater")
p_val_f 

```

Visualization of the null distribution graph

```{r}
#| message: false
#| warning: false
visualize(null_corr) +
  xlim(0,0.1)+
  shade_p_value(obs_f, direction = "greater") +
  labs(
    title = paste("Null distr., F statistic =", round(obs_f$stat[1],2))
  )
```

Based on the data obtained above, the null hypothesis is rejected - there is a relationship between the price of a diamond and the assigned cluster.

#### Verification of the adopted hypothesis

To verify the hypothesis, a graph will be prepared illustrating the relationship between clusters, the number of available diamonds, and average prices. If individual clusters exhibit a common trend in the number of available diamonds, this indicates that they may differ in price – the fewer diamonds of a given type/cluster, the more expensive they should be. This relationship will then be visualized directly.

First, the quantity-cluster relationship will be illustrated.

```{r}
ggplot(augmented_data, aes(x= .pred_cluster))+
  geom_bar(fill = "red")+
  labs(
    title = "Number of rows in clusters",
    subtitle = "Number of clusters - four",
    caption = "Source - augmented_data",
    x = "Name of cluster"
  )
```

Then, in order to directly evaluate the average price in a given category, we transform the data through grouping and aggregation.

```{r}
augmented_data_summary_price <- augmented_data %>%
  select(price, .pred_cluster) %>%
  group_by(.pred_cluster) %>%
  summarise(across(where(is.numeric), median),
            count = n())
```


Plot of relations of price - cluster - count of diamonds in cluster

```{r}
ggplot(augmented_data_summary_price, aes(x = .pred_cluster, y = 1, fill = price)) +
  geom_tile(aes(width = 0.9, height = count / max(count))) +
  scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
  labs(title = "Heatmap of price and count of",
       x = "Cluster",
       y = "",
       fill = "Price") +
  theme_minimal()
```

The analysis of the above graphs allows us to confirm the adopted hypothesis (H1 - there is a relation) about the relationship between the assigned cluster and the diamond price.

### Relationship between assigned cluster and color

To determine the relationship between cluster and color, the chi-square statistic will be calculated - as the relationship between categorical values is assessed.

The procedure is similar to the previous one.

```{r}
obs_chisq <- augmented_data %>%
  specify(color ~ .pred_cluster) %>%      
  calculate(stat = "chisq")    
```

As before - the null hypothesis says that there is no relationship between cluster and price

```{r}
null_chisq <- augmented_data %>%
  specify(color ~ .pred_cluster) %>%
  hypothesize(null = "independence") %>%  
  generate(reps = 2000, type = "permute") %>%
  calculate(stat = "chisq")
```

Similarly to the previous example, the p value is calculated

```{r}
p_val_chisq <- get_p_value(null_chisq, obs_chisq, direction = "greater")
p_val_chisq
```


```{r}
visualize(null_chisq) +
  xlim(0, 100)+
  labs(
    title = paste("Null distr., chi-sq statistic =", round(obs_chisq$stat[1],2))
  )
```
Based on the data obtained above, the null hypothesis is rejected - there is a relationship between the color of a diamond and the assigned cluster.

## Summary

By dividing the diamond collection into clusters, it can be concluded that the division was made primarily based on price. The cluster assigned is unrelated to color, and price is unrelated to the diamond's depth.